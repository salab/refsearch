version: '3.8'

services:
  frontend:
    container_name: rs-frontend
    restart: always
    build:
     context: .
     dockerfile: ./frontend.Dockerfile
    ports:
      - "8080:80"
    volumes:
      - caddy_data:/data
      - caddy_config:/config

  backend:
    container_name: rs-backend
    restart: always
    build:
      context: .
      dockerfile: ./backend.Dockerfile
      target: api-runner
    ports:
      - "3000:3000"
    environment:
      PORT: 3000
      MONGODB_USER: root
      MONGODB_PASSWORD: password
      MONGODB_HOST: rs-mongo
      MONGODB_PORT: 27017

  runner1:
    container_name: rs-runner-1
    restart: always
    build:
      context: .
      dockerfile: ./backend.Dockerfile
      target: job-runner
    environment:
      RUNNER_ID: local-1
      MONGODB_USER: root
      MONGODB_PASSWORD: password
      MONGODB_HOST: rs-mongo
      MONGODB_PORT: 27017
      DATA_DIR: /work/data
      HOST_DATA_DIR: ${PWD}/data
    volumes:
      - ./data:/work/data
      - /var/run/docker.sock:/var/run/docker.sock

  runner2:
    container_name: rs-runner-2
    restart: always
    build:
      context: .
      dockerfile: ./backend.Dockerfile
      target: job-runner
    environment:
      RUNNER_ID: local-2
      MONGODB_USER: root
      MONGODB_PASSWORD: password
      MONGODB_HOST: rs-mongo
      MONGODB_PORT: 27017
      DATA_DIR: /work/data
      HOST_DATA_DIR: ${PWD}/data
    volumes:
      - ./data:/work/data
      - /var/run/docker.sock:/var/run/docker.sock

  runner3:
    container_name: rs-runner-3
    restart: always
    build:
      context: .
      dockerfile: ./backend.Dockerfile
      target: job-runner
    environment:
      RUNNER_ID: local-3
      MONGODB_USER: root
      MONGODB_PASSWORD: password
      MONGODB_HOST: rs-mongo
      MONGODB_PORT: 27017
      DATA_DIR: /work/data
      HOST_DATA_DIR: ${PWD}/data
    volumes:
      - ./data:/work/data
      - /var/run/docker.sock:/var/run/docker.sock

  runner4:
    container_name: rs-runner-4
    restart: always
    build:
      context: .
      dockerfile: ./backend.Dockerfile
      target: job-runner
    environment:
      RUNNER_ID: local-4
      MONGODB_USER: root
      MONGODB_PASSWORD: password
      MONGODB_HOST: rs-mongo
      MONGODB_PORT: 27017
      DATA_DIR: /work/data
      HOST_DATA_DIR: ${PWD}/data
    volumes:
      - ./data:/work/data
      - /var/run/docker.sock:/var/run/docker.sock

  mongodb:
    container_name: rs-mongo
    restart: always
    image: mongo:6.0.3
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./data/mongodb:/data/db
    deploy:
      resources:
        limits:
          memory: 2G

volumes:
  caddy_data:
  caddy_config:
